---
description: 
globs: 
alwaysApply: true
---
This file contains core principles for writing code in our codebase. Each principle is followed by a small example showing good and bad practices.

- Use lower-kebab-case for directories and files.
- Import paths should start with @/.
- Place files as close as possible to where they are used.
- Follow the feature-based organization pattern.
- Use descriptive suffixes for files that indicate their purpose.
- Name files with the feature name as prefix and a descriptive suffix indicating the file's purpose:

```
[featureName].screen.tsx
[featureName].nav.tsx
[featureName].store.ts
[featureName].query.ts
[featureName].utils.ts
[featureName].types.ts
[featureName].test.ts
```

Example structure:

```
features/
└── accounts/
    │-- account-card.component.tsx
    │-- account-settings.component.tsx
    │-- accounts.screen.tsx
    │-- accounts.nav.tsx
    │-- use-accounts.hooks.ts
    │-- accounts.utils.ts
    ├── accounts.query.ts
    └── accounts.types.ts
```

This organization ensures that:

1. Related code stays together
2. Files are easy to find based on their name
3. The purpose of each file is clear from its suffix
4. Features are modular and self-contained