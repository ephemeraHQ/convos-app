name: Production Deployment

on:
  workflow_dispatch:
    inputs:
      force_native_build:
        description: "Force native build"
        type: boolean
        default: true
        required: true

# Ensure only one workflow runs at a time
concurrency:
  group: "production-deployment"
  cancel-in-progress: false

permissions:
  contents: write
  id-token: write

jobs:
  merge-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: "main" # Explicitly checkout main
          token: ${{ secrets.PAT_GITHUB }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Merge main into production
        run: |
          git fetch origin production:production # Ensure local production is up-to-date
          git checkout production
          git merge main --no-ff --no-edit -m "Merge branch 'main' into production via workflow_dispatch [skip ci]"
          git push origin production

      - name: Checkout production branch for build
        uses: actions/checkout@v4
        with:
          ref: "production" # Checkout the production branch
          token: ${{ secrets.PAT_GITHUB }}

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "yarn"
          cache-dependency-path: yarn.lock
        env:
          SKIP_YARN_COREPACK_CHECK: "1"
      - run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          packager: yarn
          eas-cache: true
          patch-watchers: true

      - name: Prepare iOS build folder
        run: |
          # Run the notification service extension plugin first
          yarn plugins:build:notification-service-extension
          
          # Generate the iOS folder with the Notification Service Extension
          EXPO_ENV=production yarn expo prebuild --platform ios --clean
          
          # Verify that the iOS folder was created correctly
          ls -la ios/
          
          # Check if the NSE target exists in the project
          find ios -name "*.xcodeproj" -type d | xargs ls -la
          find ios -name "project.pbxproj" -type f -exec grep -l "ConvosNSE" {} \; || echo "NSE target not found in any project file"
          
          # Make sure the iOS project has code signing properly configured
          find ios -name "project.pbxproj" -type f -exec grep -l "CODE_SIGN_IDENTITY\|DEVELOPMENT_TEAM" {} \; || echo "Code signing not found in project"

      - name: Build iOS production
        run: |
          eas build --platform ios --profile production --non-interactive --auto-submit --clear-cache
